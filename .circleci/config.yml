# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1

# Orchestrate or schedule a set of jobs
jobs:
  create_and_deploy:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: |
          aws cloudformation deploy \
          --template-file bucket.yml \
          --stack-name "${CIRCLE_WORKFLOW_ID}" \
          --parameter-overrides NAME="${CIRCLE_WORKFLOW_ID}"
      - run: aws s3 sync . s3://"${CIRCLE_WORKFLOW_ID}" --delete
  get_pipiline_id:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: getting the pipelineid
          command: |
            aws cloudformation \
            list-exports --query "Exports[?Name==\`PipelineID\`].Value" \
            --no-paginate --output text  >> ~/output.txt
            cat ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt

  promote_to_production:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: |
          aws cloudformation deploy \
            --template-file cloudfront.yml \
            --stack-name production-distro \
            --parameter-overrides PipelineID="${CIRCLE_WORKFLOW_ID}"
  clean_up_old_code:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: |
          aws s3 rm "s3://${OldPipelineID}" --recursive
          aws cloudformation delete-stack --stack-name "${PreviousPipelineID}"
      - attach_workspace:
          at: ~/
  # Name the workflow "welcome"
workflows:
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      - create_and_deploy
      - get_pipiline_id:
          requires:
            - create_and_deploy
      - promote_to_production:
          requires:
            - get_pipiline_id
      - clean_up_old_code:
          requires:
            - promote_to_production
